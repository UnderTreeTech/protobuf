// Code generated by protoc-gen-bm v0.1, DO NOT EDIT.
// source: app.proto

package app

import (
	"context"

	bm "github.com/go-kratos/kratos/pkg/net/http/blademaster"
	"github.com/go-kratos/kratos/pkg/net/http/blademaster/binding"
)
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

// to suppressed 'imported but not used warning'
var _ *bm.Context
var _ context.Context
var _ binding.StructValidator

var PathAppPing = "/service.app.v1.App/Ping"
var PathAppGetAppSecret = "/service.app.v1.App/GetAppSecret"
var PathAppGetAppSkipUrls = "/service.app.v1.App/GetAppSkipUrls"

// AppBMServer is the server API for App service.
// Service Definition
type AppBMServer interface {
	Ping(ctx context.Context, req *google_protobuf1.Empty) (resp *google_protobuf1.Empty, err error)

	GetAppSecret(ctx context.Context, req *AppReq) (resp *AppReply, err error)

	GetAppSkipUrls(ctx context.Context, req *AppReq) (resp *SkipUrlsReply, err error)
}

var AppSvc AppBMServer

func appPing(c *bm.Context) {
	p := new(google_protobuf1.Empty)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := AppSvc.Ping(c, p)
	c.JSON(resp, err)
}

func appGetAppSecret(c *bm.Context) {
	p := new(AppReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := AppSvc.GetAppSecret(c, p)
	c.JSON(resp, err)
}

func appGetAppSkipUrls(c *bm.Context) {
	p := new(AppReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := AppSvc.GetAppSkipUrls(c, p)
	c.JSON(resp, err)
}

// RegisterAppBMServer Register the blademaster route
func RegisterAppBMServer(e *bm.Engine, server AppBMServer) {
	AppSvc = server
	e.GET("/service.app.v1.App/Ping", appPing)
	e.GET("/service.app.v1.App/GetAppSecret", appGetAppSecret)
	e.GET("/service.app.v1.App/GetAppSkipUrls", appGetAppSkipUrls)
}
