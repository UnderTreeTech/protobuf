// Code generated by protoc-gen-bm v0.1, DO NOT EDIT.
// source: stardust.proto

package stardust

import (
	"context"

	bm "github.com/go-kratos/kratos/pkg/net/http/blademaster"
	"github.com/go-kratos/kratos/pkg/net/http/blademaster/binding"
)

// to suppressed 'imported but not used warning'
var _ *bm.Context
var _ context.Context
var _ binding.StructValidator

var PathStarDustGetUniqueIds = "/service.stardust.v1.StarDust/GetUniqueIds"

// StarDustBMServer is the server API for StarDust service.
type StarDustBMServer interface {
	GetUniqueIds(ctx context.Context, req *IdReq) (resp *IdReply, err error)
}

var StarDustSvc StarDustBMServer

func starDustGetUniqueIds(c *bm.Context) {
	p := new(IdReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := StarDustSvc.GetUniqueIds(c, p)
	c.JSON(resp, err)
}

// RegisterStarDustBMServer Register the blademaster route
func RegisterStarDustBMServer(e *bm.Engine, server StarDustBMServer) {
	StarDustSvc = server
	e.GET("/service.stardust.v1.StarDust/GetUniqueIds", starDustGetUniqueIds)
}
