// 定义项目 API 的 proto 文件 可以同时描述 gRPC 和 HTTP API
// protobuf 文件参考:
//  - https://developers.google.com/protocol-buffers/
syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/empty.proto";

package service.stardust.v1;

option go_package = "stardust";
option (gogoproto.goproto_getters_all) = false;

service StarDust {
    rpc Ping(.google.protobuf.Empty) returns (.google.protobuf.Empty);
    rpc GetUniqueIds(IdReq) returns (IdsReply);
    rpc GetUniqueId(IdReq) returns (IdReply);
    rpc ParseId(ParseReq) returns (ParseReply);
}

message IdReq {
    int64 biz_type = 1 [(gogoproto.jsontag) = 'biz_type',(gogoproto.moretags) = 'form:"biz_type" validate:"required,gte=0,lte=32"'];
    int64 len = 2 [(gogoproto.jsontag) = 'len',(gogoproto.moretags) = 'form:"len" validate:"required,gte=0,lte=1000"'];
}

message IdsReply {
    repeated int64 ids = 1 [(gogoproto.jsontag) = 'ids'];
}

message IdReply {
    int64 id = 1 [(gogoproto.jsontag) = 'id'];
}

message ParseReq {
    int64 id = 1 [(gogoproto.jsontag) = 'id',(gogoproto.moretags) = 'form:"id" validate:"required"'];
}

message ParseReply {
    int64 time = 1 [(gogoproto.jsontag) = 'time'];
    int64 idc = 2 [(gogoproto.jsontag) = 'idc'];
    int64 worker = 3 [(gogoproto.jsontag) = 'worker'];
    int64 biz_type = 4 [(gogoproto.jsontag) = 'biz_type'];
}
